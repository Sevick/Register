<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title><%= action %> event</title>
    <!-- jQuery library -->
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.1.1/jquery.min.js"></script>

    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css"
          integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">
    <!-- Optional theme -->
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap-theme.min.css"
          integrity="sha384-rHyoN1iRsVXV4nD0JutlnGaslCJuC7uwjduW9SVrLvRYooPp2bWYgmgJQIXwl/Sp" crossorigin="anonymous">
    <!-- Latest compiled and minified JavaScript -->
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"
            integrity="sha384-Tc5IQib027qvyjSMfHjOMaLkfuWVxZxUPnCJA7l2mCWNIpG9mGCD8wGNIcPD7Txa"
            crossorigin="anonymous"></script>

    <link rel="stylesheet" type="text/css" href="/css/event.css">

    <script src="https://rawgit.com/enyo/dropzone/master/dist/dropzone.js"></script>
    <link rel="stylesheet" href="https://rawgit.com/enyo/dropzone/master/dist/dropzone.css">

    <script src="/js/serializejson/jquery.serializejson.min.js"></script>
</head>
<body>

<div class="container">

    <div class="panel panel-primary">
        <div class="panel-heading">
            <h3 class="panel-title"><%= action %> event</h3>
        </div>

        <div class="panel-body">

            <form method="post" action="#" id="eventForm">
                <div id="inputsContainer">

                    <div class="form-group col-md-6">
                        <label for="name">Event name</label>
                        <input type="text" class="form-control" id="name" name="name" required="true"
                               maxlength="64">
                    </div>

                    <div class="form-group col-md-2">
                        <label for="dt">Event date</label>
                        <input type="date" class="form-control" id="dt" name="dt" required="true">
                    </div>

                    <div class="form-group col-md-2">
                        <label for="regstart">Registration start</label>
                        <input type="date" class="form-control" id="regstart" name="regstart" required="true">
                    </div>

                    <div class="form-group col-md-2">
                        <label for="regend">Registration end</label>
                        <input type="date" class="form-control" id="regend" name="regend" required="true">
                    </div>

                    <div class="form-group col-md-12">
                        <label for="info">Event description</label>
                        <textarea class="form-control" rows="5" name="info" id="info" maxlength="450"></textarea>
                    </div>


                    <div class="form-group col-md-6">
                        <label for="minmembers">Minimum members</label>
                        <input type="number" class="form-control" id="minmembers" name="minmembers" required="true"
                               min="1"
                               max="9999999">
                    </div>

                    <div class="form-group col-md-6">
                        <label for="maxmembers">Maximum members</label>
                        <input type="number" class="form-control" id="maxmembers" name="maxmembers" required="true"
                               min="1"
                               max="9999999">
                    </div>

                </div>

                <div class="col-md-12">
                    <div class="dropzone col-md-12" id="myDropzone"></div>
                </div>


                <div class="col-md-12">
                    <label>Fields, that participants should complete to register</label>
                    <div class="row">
                        <div class="col-md-11 col-md-offset-1">
                            <input type="text" class="form-control" name="email" required="true" maxlength="45"
                                   value="email" readonly>
                        </div>
                    </div>
                </div>


                <input type="hidden" name="eventId">
                <input type="hidden" name="eventRandomHash">
                <input type="hidden" name="removedFilesArray">
                <input type="hidden" name="uploadedFilesArray">
                <input type="hidden" name="customFields">
                <input type="hidden" name="customFieldsUpdatesArray">

                <div class="col-md-12 col-xs-12" id="realSumbit" style="display: none">
                    <button type="submit" id="realSubmitButton" class="btn btn-primary pull-right">==</button>
                </div>
            </form>


            <div class="col-md-12" id="eventFields">

            </div>

            <div class="col-md-12 col-xs-12" id="addfield">
                <button type="button" class="btn btn-default pull-right" id="addFieldButton"
                        aria-label="Add field">
                    <span class="glyphicon glyphicon-plus" aria-hidden="true"></span>
                </button>
            </div>

            <div class="col-md-12 col-xs-12" id="sumbit">
                <button type="button" id="submitButton" class="btn btn-primary pull-right"><%= action %> event</button>
            </div>


            <div id="newFieldTemplate" class="customFieldDiv" style="display: none">
                <div class="col-md-11 col-md-offset-1 input-group">
                    <input type="text" class="form-control customField" id="template" required="true" maxlength="45">
                            <span class="input-group-btn">
                                <button type="button" class="btn btn-default pull-right removeFieldButton"
                                        aria-label="Remove field">
                                    <span class="glyphicon glyphicon-minus" aria-hidden="true"></span>
                                </button>
                                </span>
                </div>
            </div>

        </div>
    </div>
</div>

<script type="text/javascript" src="/js/common.js"></script>
<script type="text/javascript" src="/js/event.js"></script>
<script type="text/javascript">

    var eventImages = [];
    var removedImages = [];
    var preloadedFields = [];
    var eventRandomHash = Math.random().toString(36).substring(2, 10);
    eventRandomHash = eventRandomHash + Date.now();
    var cutomFieldsCount = 0;

    var eventdata =<%- JSON.stringify(eventdata) %>;
    var fields = <%- JSON.stringify(fields) %>;

    //console.log(eventdata);
    //console.log(fields);

    if (eventdata) {
        // update routeEvent
        document.title = 'Edit routeEvent';
        $('input[name="eventId"]').val(eventdata.id);
        for (var eventFieldIdx in eventdata) {
            console.log(eventFieldIdx);
            var inputfield = $('#' + eventFieldIdx);
            if (inputfield.length) {
                //console.log(inputfield);
                //console.log(eventdata[eventFieldIdx]);
                if (inputfield.attr('type') === 'date') {
                    var dtStr = eventdata[eventFieldIdx];
                    $('#' + eventFieldIdx).val(getDataForInputField(new Date(dtStr)));
                }
                else {
                    $('#' + eventFieldIdx).val(eventdata[eventFieldIdx]);
                }
            }
        }

        var preloadedImgs = [];
        if (!eventdata.imgslist)  preloadedImgs = [];
        else preloadedImgs = eventdata.imgslist.split('|');
        //console.log(preloadedImgs);
    }


    if (fields) {
        preloadedFields = fields.fields;
        for (var fieldsIdx in fields.fields) {
            var newId = 'dbCustomField_' + cutomFieldsCount++;
            var newField = $('#newFieldTemplate').clone().prop('id', 'div' + newId).show();
            console.log(newField);
            $('#eventFields').append(newField);
            $('#div' + newId).addClass("dbCustomFieldDiv");
            $('#div' + newId).find('#template').prop('id', newId).prop('name', newId + '[]');
            $('#div' + newId).find('.removeFieldButton').remove();
            console.log(fields.fields[fieldsIdx].name);
            $('#' + newId).val(fields.fields[fieldsIdx].name);
            $('#' + newId).attr('dbFieldId',fields.fields[fieldsIdx].id);
            $('#' + newId).attr('dbFieldId',fields.fields[fieldsIdx].id);
        }
    }


    setupDoc();

    $('.container').on('click', '.removeFieldButton', onFieldDelete); // onClick for remove additional field buttons
    function onFieldDelete() {
        $(this).parent().parent().parent().remove();
    }

    // evaluate hidden fields and call real sumbit
    $('#submitButton').click(submitData);
    function submitData() {
        $('#realSubmitButton').click();
    }

    $('#addFieldButton').click(addField);

    function addField() {
        var newId = 'customField_' + cutomFieldsCount++;
        var newField = $('#newFieldTemplate').clone().prop('id', 'div' + newId).show();
        console.log(newField);
        $('#eventFields').append(newField);
        $('#div' + newId).addClass("customFieldDiv");
        $('#div' + newId).find('#template').prop('id', newId).prop('name', newId + '[]');
    }


    Dropzone.options.myDropzone = {
        paramName: "file", // The name that will be used to transfer the file
        maxFilesize: 1024, // MB
        url: "/event/file-upload?hash=" + eventRandomHash,
        acceptedFiles: 'image/*',
        addRemoveLinks: true,
        autoProcessQueue: true,
        dictDefaultMessage: "Click to add images<br>Or drag&drop them here (max size - 1MB)",
        init: function () {

            if (preloadedImgs) {
                var myDropzone = this;
                preloadedImgs.map(function (img, imgIdx) {
                    var imgUrl = window.location.origin + '/routeEvent/image?id=' + eventdata.id + '&img=' + img;
                    var imgShortUrl = '/event/image?id=' + eventdata.id + '&img=' + img;
                    var mockFile = {name: img, size: 0};
                    myDropzone.files.push(mockFile)
                    myDropzone.emit("addedfile", mockFile);
                    //myDropzone.emit("thumbnail", mockFile, imgUrl);
                    myDropzone.createThumbnailFromUrl(mockFile, imgShortUrl);
                    myDropzone.emit("complete", mockFile);
                    var existingFileCount = 1; // The number of files already uploaded
                    //myDropzone.options.maxFiles = myDropzone.options.maxFiles - existingFileCount;
                });
            }



            this.on("success", function (file) {
                //console.log("Images added: ");
                //console.log(file);
                eventImages.push(file.name);
            });
            this.on("removedfile", function (file) {
                console.log('removedfile:');
                console.log(file.name);
                console.log("idx="+eventImages.indexOf(file.name));
                if (eventImages.indexOf(file.name)>=0)
                    eventImages.splice(eventImages.indexOf(file.name), 1);
                else
                    removedImages.push(file.name);


            });
        },
    };

    $('#eventForm').on('submit', function (event) {
        event.preventDefault();
        populateHiddenFields();
        $.post({
            url: '/event/newevent',
            type: 'post',
            data: $('#eventForm').serializeJSON(),
            //data: $(this).serialize(),
            success: function (data, textStatus, jqXHR) {
                // if success, HTML response is expected, so replace current
                if (textStatus === 'success') {
                    /*
                     var newDoc = document.open('text/html', 'replace');
                     newDoc.write(data);
                     newDoc.close();
                     */
                    console.log(data);
                    redirect(data.redirect);
                }
            }
        }).fail(function (jqXHR, textStatus, errorThrown) {
            if (jqXHR.status == 0 || jqXHR == 302) {
                alert('Your session has ended due to inactivity after 10 minutes.\nPlease refresh this page, or close this window and log back in to system.');
            } else {
                alert('Unknown error returned while saving' + (typeof errorThrown == 'string' && errorThrown.trim().length > 0 ? ':\n' + errorThrown : ''));
            }
        });
        return false;
    });

    function populateHiddenFields() {
        $('input[name="uploadedFilesArray"]').val(JSON.stringify(eventImages));
        $('input[name="eventRandomHash"]').val(eventRandomHash);
        $('input[name="removedFilesArray"]').val(JSON.stringify(removedImages));

        var customFields = [];
        $('input[name^="customField_"]').each(function () {
            var nextField = {};
            nextField.name = $(this).val();
            nextField.mandatory = 1;
            nextField.maxlen = 30;
            nextField.mask = '';
            customFields.push(nextField);
        });
        $('input[name="customFields"]').val(JSON.stringify(customFields));

        var customFieldsUpdate;
        $('input[name^="customField_"]').each(function () {
            var preloadedFieldsIdx=preloadedFields.find(function(item){ return  item.name!==$(this).val()});
            if (preloadedFieldsIdx){
                var elem=preloadedFields[preloadedFieldsIdx];
                elem.name=$(this).val();
                customFieldsUpdate.push(elem);
            }
        });
        $('input[name="customFieldsUpdatesArray"]').val(JSON.stringify(customFieldsUpdate));


    }


</script>

</body>
</html>
